# PE#12
#
# The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
# 
# 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
# 
# Let us list the factors of the first seven triangle numbers:
# 
#  1: 1
#  3: 1,3
#  6: 1,2,3,6
# 10: 1,2,5,10
# 15: 1,3,5,15
# 21: 1,3,7,21
# 28: 1,2,4,7,14,28
#
# We can see that 28 is the first triangle number to have over five divisors.
# 
# What is the value of the first triangle number to have over five hundred divisors?

class TriangleNumbers
  def initialize
    @i = 1
  end
  def next
    # Gauss summation formula: sum(1..N) = (N*(N+1))/2
    gauss_sum = (@i * (@i + 1)) / 2
    @i += 1
    return gauss_sum
  end
  def first_n(n)
    for i in 1..n
      yield self.next
    end
  end
end

# Now find the number of divisors.
triangle_generator = TriangleNumbers.new

1_000_000.times do
  # Generate a triangle number
  triangle_number = triangle_generator.next
  
  # Count its divisors
  divisor_count = triangle_number.prime_division.inject(1) { |product, pair| product *= (pair[1] + 1) }

  if divisor_count > 500
    puts triangle_number.prime_division.inspect
    puts triangle_number
    puts divisor_count
    break
  end
end

